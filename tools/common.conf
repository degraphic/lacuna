FREEBSD_VERSION=8

set_var() {
	eval "${_build}_$1=$2"
}

current_var() {
	for name in $* ; do
		eval "CURRENT_$name=\$${_build}_$name"
	done
}

calculate_size() {
	var=$1
	eval "a1=$2"
	eval "a1=$a1"
	a1=`echo $a1 | tr '[:upper:]' '[:lower:]'`
	case $a1 in
	*k)
		a1=`echo $a1 | tr -d 'k'`
		a1=`expr $a1 \* 2`
		;;
	*kb)
		a1=`echo $a1 | tr -d 'kb'`
		a1=`expr $a1 \* 2`
		;;
	*m)
		a1=`echo $a1 | tr -d 'm'`
		a1=`expr $a1 \* 1024 \* 2`
		;;
	*mb)
		a1=`echo $a1 | tr -d 'mb'`
		a1=`expr $a1 \* 1024 \* 2`
		;;
	*g)
		a1=`echo $a1 | tr -d 'g'`
		a1=`expr $a1 \* 1024 \* 1024 \* 2`
		;;
	*gb)
		a1=`echo $a1 | tr -d 'gb'`
		a1=`expr $a1 \* 1024 \* 1024 \* 2`
		;;
	esac
	eval "$var=$a1"
}

set_var NAME lacuna
calculate_size "${_build}_RAM_TMPVARSIZE" 15mb
#set_var RAM_TMPVARSIZE `expr 10 \* 2048`
set_var PACKAGE_DIR /usr/obj/lacuna/Pkg

if [ -f $LACUNA_TOOLS/build.$FREEBSD_VERSION/src.conf.world ]; then
	echo "# Using world file ($LACUNA_TOOLS/build.$FREEBSD_VERSION/src.conf.world)"
	CONF_WORLD=`cat $LACUNA_TOOLS/build.$FREEBSD_VERSION/src.conf.world`
fi
if [ -f $LACUNA_TOOLS/build.$FREEBSD_VERSION/src.conf.build ]; then
	echo "# Using build file ($LACUNA_TOOLS/build.$FREEBSD_VERSION/src.conf.build)"
	CONF_BUILD=`cat $LACUNA_TOOLS/build.$FREEBSD_VERSION/src.conf.build`
fi
if [ -f $LACUNA_TOOLS/build.$FREEBSD_VERSION/src.conf.install ]; then
	echo "# Using install file ($LACUNA_TOOLS/build.$FREEBSD_VERSION/src.conf.install)"
	CONF_INSTALL=`cat $LACUNA_TOOLS/build.$FREEBSD_VERSION/src.conf.install`
fi

if [ -f $LACUNA_TOOLS/build.$FREEBSD_VERSION/Pkglist ]; then
	echo "# Using pkglist ($LACUNA_TOOLS/build.$FREEBSD_VERSION/Pkglist)"
  cust_download_pkg () (
		current_var ARCH PACKAGE_DIR TOOLS
		if $do_world ; then
			rm $CURRENT_PACKAGE_DIR/*
		else
			pprint 3 "Using existing packages"
		fi
    ruby19 -I $LACUNA_TOOLS/lib -rpackager $LACUNA_TOOLS/build.$FREEBSD_VERSION/Pkglist $CURRENT_PACKAGE_DIR $CURRENT_ARCH
		#sh $CURRENT_TOOLS/fill_pkg.sh $LACUNA_PACKAGE_DIR $CURRENT_PACKAGE_DIR
  )
  customize_cmd cust_download_pkg
  customize_cmd cust_pkg
fi

customize_cmd cust_install_files

cust_install_machine_files () (
	current_var WORLDDIR
	cd ${LACUNA_TOOLS}/Files
	find . -print | grep -Ev '/(CVS|\.svn|\.git)' | cpio -dumpv ${CURRENT_WORLDDIR}
)
customize_cmd cust_install_machine_files

cust_install_lacuna() (
  current_var WORLDDIR
  #Copy lacuna code to 
  cp -R $LACUNA_SRC $CURRENT_WORLDDIR/usr/lacuna
  
  #Package gems and convert them to native binary packages
  (
    cd $CURRENT_WORLDDIR/usr/lacuna
    bundle package
    cd vendor/cache
    gembuilder -s *
  )
  
  #Install a resolv.conf
  if [ -f ${CURRENT_WORLDDIR}/etc/resolv.conf ]; then
    mv ${CURRENT_WORLDDIR}/etc/resolv.conf ${CURRENT_WORLDDIR}/etc/resolv.conf.old
  fi
  cp /etc/resolv.conf ${CURRENT_WORLDDIR}/etc/resolv.conf
  
  #Update rubygems
  gem19 update --system
  chroot $CURRENT_WORLDDIR sh -c 'gem19 update --system'
  
  #Install bundler
  chroot $CURRENT_WORLDDIR sh -c 'gem19 install bundler'
  
  #Install gems
  chroot $CURRENT_WORLDDIR sh -c 'cd /usr/lacuna ; bundle install --local --binstubs'

  rm -rf $CURRENT_WORLDDIR/usr/lacuna/vendor/cache

  #Restore old resolv.conf
  rm $CURRENT_WORLDDIR/etc/resolv.conf
  if [ -f $CURRENT_WORLDDIR/etc/resolv.conf.old ]; then
    mv $CURRENT_WORLDDIR/etc/resolv.conf.old $CURRENT_WORLDDIR/etc/resolv.conf
  fi
)
customize_cmd cust_install_lacuna

cust_maildirmake_skel() (
  current_var WORLDDIR
  chroot $CURRENT_WORLDDIR sh -c 'maildirmake /usr/share/skel/Maildir'
)
late_customize_cmd cust_maildirmake_skel

cust_var_tmp_writeable() (
  current_var WORLDDIR
  chroot $CURRENT_WORLDDIR sh -c 'chmod a+w /var/tmp'
  chroot $CURRENT_WORLDDIR sh -c 'chmod a+w /conf/base/var/tmp'
)
late_customize_cmd cust_var_tmp_writeable

cust_move_roundcube_installer() (
  current_var WORLDDIR
  chroot $CURRENT_WORLDDIR sh -c 'mv /usr/local/www/roundcube/installer /usr/local/share/roundcube'
)
late_customize_cmd cust_move_roundcube_installer

cust_create_admin_user() (
  current_var WORLDDIR
  chroot $CURRENT_WORLDDIR sh -c 'echo -n "lacuna" | pw useradd admin -c "Administrator" -h 0 -m'
  chroot $CURRENT_WORLDDIR sh -c 'su -m admin -c "maildirmake /var/home/admin/Maildir"'
  #echo 'root: admin' >> $CURRENT_WORLDDIR/etc/aliases
  chroot $CURRENT_WORLDDIR sh -c 'echo -n "*" | pw usermod root -H 0 -s /usr/local/bin/bash'
  chroot $CURRENT_WORLDDIR sh -c 'pw groupadd users'
)
customize_cmd cust_create_admin_user

cust_remove_static_library () (
	current_var WORLDDIR
	cd ${CURRENT_WORLDDIR}
	find . -name *.la -exec rm \{\} \;
	find . -name *.a -exec rm \{\} \;
)
customize_cmd cust_remove_static_library

cust_remove_documentation () (
	current_var WORLDDIR
	cd ${CURRENT_WORLDDIR}
	rm -rf usr/local/share/ri
	rm -rf usr/local/share/doc/*
	rm -rf usr/local/man/*
	rm -rf usr/local/include/*
	rm -rf usr/local/lib/ruby/gems/1.9/doc/*
)
customize_cmd cust_remove_documentation

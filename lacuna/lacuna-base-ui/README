LacunaBaseUi
============

A slice for the Merb framework.

------------------------------------------------------------------------------
   

To see all available tasks for LacunaBaseUi run:

rake -T slices:lacuna_base_ui

------------------------------------------------------------------------------

Instructions for installation:

file: config/init.rb

# add the slice as a regular dependency

dependency 'lacuna-base-ui'

# if needed, configure which slices to load and in which order

Merb::Plugins.config[:merb_slices] = { :queue => ["LacunaBaseUi", ...] }

# optionally configure the plugins in a before_app_loads callback

Merb::BootLoader.before_app_loads do
  
  Merb::Slices::config[:lacuna_base_ui][:option] = value
  
end

file: config/router.rb

# example: /lacuna_base_ui/:controller/:action/:id

add_slice(:LacunaBaseUi)

# example: /:lang/:controller/:action/:id

add_slice(:LacunaBaseUi, :path => ':lang')

# example: /:controller/:action/:id

slice(:LacunaBaseUi)

Normally you should also run the following rake task:

rake slices:lacuna_base_ui:install

------------------------------------------------------------------------------

You can put your application-level overrides in:

host-app/slices/lacuna-base-ui/app - controllers, models, views ...

Templates are located in this order:

1. host-app/slices/lacuna-base-ui/app/views/*
2. gems/lacuna-base-ui/app/views/*
3. host-app/app/views/*

You can use the host application's layout by configuring the
lacuna-base-ui slice in a before_app_loads block:

Merb::Slices.config[:lacuna_base_ui] = { :layout => :application }

By default :lacuna_base_ui is used. If you need to override
stylesheets or javascripts, just specify your own files in your layout
instead/in addition to the ones supplied (if any) in 
host-app/public/slices/lacuna-base-ui.

In any case don't edit those files directly as they may be clobbered any time
rake lacuna_base_ui:install is run.